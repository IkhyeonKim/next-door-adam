{"version":3,"sources":["components/section/brand-section.js","components/section/hero-section.js","components/pages/main-page.presenter.js","components/pages/main-page.js","global-style.js","App.js","reportWebVitals.js","index.js"],"names":["BrandWrapper","styled","div","HiddenSection","VisibleSection","BrandSection","hiddenRef","useRef","useEffect","refElement","current","handleMouseMove","e","console","log","path","classList","contains","isVisibeSectionY","isVisibeSectionX","offsetX","offsetY","style","clipPath","window","addEventListener","removeEventListener","className","ref","HeroWrapper","SideTitle","HeroContent","HeroSection","marginTop","MainPagePresenter","MainPage","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAGMA,EAAeC,IAAOC,IAAV,uEAMZC,EAAgBF,IAAOC,IAAV,gQAebE,EAAiBH,IAAOC,IAAV,gMA4DLG,EA/CM,WACnB,IAAMC,EAAYC,mBA8BlB,OA5BAC,qBAAU,WACR,IAAMC,EAAaH,EAAUI,QACvBC,EAAkB,SAACC,GAEvB,GADAC,QAAQC,IAAI,YAAaF,EAAEG,KAAK,KAE9BH,EAAEG,KAAK,GAAGC,UAAUC,SAAS,mBAC7BL,EAAEG,KAAK,GAAGC,UAAUC,SAAS,oBAC7BL,EAAEG,KAAK,GAAGC,UAAUC,SAAS,qBAEzBR,EAAY,CACd,IAAMS,EAAmBN,EAAEG,KAAK,GAAGC,UAAUC,SAAS,mBAAqB,GAAK,EAC1EE,EAAmBP,EAAEG,KAAK,GAAGC,UAAUC,SAAS,mBAAqB,GAAK,EAE1EG,EAAUR,EAAEQ,QAAU,EAAIR,EAAEQ,QAAU,EACtCC,EAAUT,EAAES,QAAU,EAAIT,EAAES,QAAU,EAC5CZ,EAAWa,MAAMC,SAAjB,0BAA+CH,EAAUD,EAAzD,cACEE,EAAUH,EADZ,SASN,OAFAM,OAAOC,iBAAiB,YAAad,GAE9B,WACLa,OAAOE,oBAAoB,YAAaf,MAEzC,IAED,eAACX,EAAD,CAAc2B,UAAU,gBAAxB,UACE,cAACvB,EAAD,CAAgBuB,UAAU,kBAA1B,SACE,oBAAGA,UAAU,kBAAb,sEACc,uBADd,0FAIF,cAACxB,EAAD,CAAewB,UAAU,iBAAiBC,IAAKtB,EAA/C,SACE,oBAAGqB,UAAU,kBAAb,qCAC0B,uBAD1B,mBACiD,aC1EnDE,EAAc5B,IAAOC,IAAV,4SAoBX4B,EAAY7B,IAAOC,IAAV,kPAaT6B,EAAc9B,IAAOC,IAAV,wHAqCF8B,EAvBK,WAClB,OACE,cAACH,EAAD,CAAaF,UAAU,0BAAvB,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAIA,UAAU,aAAd,+BAEE,uBAFF,kBAKA,cAACI,EAAD,CACET,MAAO,CACLW,UAAW,QAFf,wGAOA,cAACF,EAAD,0FACA,cAACD,EAAD,kCCtDOI,EATW,WACxB,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCDSC,EAJE,WACf,OAAO,cAAC,EAAD,KCkDMC,G,MAlDKC,YAAH,o6BCQFC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c78a3ba.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst BrandWrapper = styled.div`\n  position: relative;\n\n  height: 380px;\n`;\n\nconst HiddenSection = styled.div`\n  clip-path: circle(120px at 50% 50%);\n  width: 100%;\n  height: 100%;\n  padding: 4rem 1rem;\n  background-color: #f8d46c;\n  cursor: none;\n\n  p {\n    font-size: 6rem;\n    font-weight: bold;\n    text-align: center;\n  }\n`;\n\nconst VisibleSection = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  padding: 4rem 1rem;\n\n  p {\n    font-size: 6rem;\n    font-weight: bold;\n    text-align: center;\n  }\n`;\n\nconst BrandSection = () => {\n  const hiddenRef = useRef();\n\n  useEffect(() => {\n    const refElement = hiddenRef.current;\n    const handleMouseMove = (e) => {\n      console.log(\"mousemove\", e.path[0]);\n      if (\n        e.path[0].classList.contains(\"hidden-section\") ||\n        e.path[0].classList.contains(\"visible-section\") ||\n        e.path[0].classList.contains(\"visible-content\")\n      ) {\n        if (refElement) {\n          const isVisibeSectionY = e.path[0].classList.contains(\"visible-section\") ? 40 : 0;\n          const isVisibeSectionX = e.path[0].classList.contains(\"visible-section\") ? 10 : 0;\n\n          const offsetX = e.offsetX > 0 ? e.offsetX : 0;\n          const offsetY = e.offsetY > 0 ? e.offsetY : 0;\n          refElement.style.clipPath = `circle(120px at ${offsetX + isVisibeSectionX}px ${\n            offsetY + isVisibeSectionY\n          }px)`;\n        }\n      }\n    };\n\n    window.addEventListener(\"mousemove\", handleMouseMove);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, []);\n  return (\n    <BrandWrapper className=\"brand-section\">\n      <VisibleSection className=\"visible-section\">\n        <p className=\"visible-section\">\n          번역만 하지않습니다. <br /> 여러분의 이야기를 전달합니다.\n        </p>\n      </VisibleSection>\n      <HiddenSection className=\"hidden-section\" ref={hiddenRef}>\n        <p className=\"visible-section\">\n          We don't just translate <br /> We tell a story{\" \"}\n        </p>\n      </HiddenSection>\n    </BrandWrapper>\n  );\n};\n\nexport default BrandSection;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeroWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  margin: auto;\n  padding: 5rem 0 4rem 6rem;\n\n  background-color: #f8d46c;\n\n  .content-wrapper {\n    width: 980px;\n    position: relative;\n  }\n\n  h1 {\n    color: #1965c0;\n  }\n`;\n\nconst SideTitle = styled.div`\n  font-size: 18.5rem;\n  font-family: \"TmonMonsori\";\n  position: absolute;\n  top: 162px;\n  left: -59px;\n  letter-spacing: -1px;\n  color: #4f7cb1;\n  opacity: 0.15;\n  white-space: nowrap;\n  cursor: default;\n`;\n\nconst HeroContent = styled.div`\n  font-family: \"TmonMonsori\";\n  font-size: 2rem;\n  font-weight: bold;\n  color: #1965c0;\n`;\n\n// 영문 번역/카피라이팅이 필요 할 땐?\n// 이웃집 아담에게 부탁하세요!\n// 이웃집 아담\n// 여러분의 목소리를 전달합니다.\n\n// 오른쪽에\n\nconst HeroSection = () => {\n  return (\n    <HeroWrapper className=\"section section-content\">\n      <div className=\"content-wrapper\">\n        <h1 className=\"main-title\">\n          이웃집\n          <br />\n          아담\n        </h1>\n        <HeroContent\n          style={{\n            marginTop: \"1rem\",\n          }}\n        >\n          영문 번역/카피라이팅이 필요 할 땐?\n        </HeroContent>\n        <HeroContent>이웃집 아담에게 부탁하세요!</HeroContent>\n        <SideTitle>Nextdoor Adam</SideTitle>\n      </div>\n    </HeroWrapper>\n  );\n};\n\nexport default HeroSection;\n","import React from \"react\";\nimport BrandSection from \"../section/brand-section\";\nimport HeroSection from \"../section/hero-section\";\n\nconst MainPagePresenter = () => {\n  return (\n    <>\n      <HeroSection />\n      <BrandSection />\n    </>\n  );\n};\n\nexport default MainPagePresenter;\n","import React from \"react\";\nimport MainPagePresenter from \"./main-page.presenter\";\n\nconst MainPage = () => {\n  return <MainPagePresenter />;\n};\n\nexport default MainPage;\n","import { createGlobalStyle } from \"styled-components\";\n\nimport \"./assets/css/font.css\";\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        box-sizing: border-box;\n\n        margin: 0;\n        padding: 0;\n    }\n\n    html {\n        font-size: 62.5%;\n    }\n\n    html, body, #root {\n        font-family: 'Roboto-ragular', \"Noto Sans KR\", sans-serif;\n        width: 100%;\n        height: 100%;\n\n        color: #111111;\n    }\n\n      /* Scroll */\n    ::-webkit-scrollbar {\n        width: 8px;\n        height: 8px;\n    }\n    ::-webkit-scrollbar-track {\n        background: rgba(204, 204, 204, 0.4);\n    }\n    ::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.2);\n        opacity: 0.7;\n    }\n    ::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.2);\n    }\n\n    .section {\n        overflow: hidden;\n    }\n\n    .section-content {\n    }\n\n    .main-title {\n        font-family: \"TmonMonsori\";\n        font-size: 12.2rem;\n        line-height: 11.8rem;\n    }\n`;\n\nexport default GlobalStyle;\n","import MainPage from \"./components/pages/main-page\";\nimport GlobalStyle from \"./global-style\";\n\nfunction App() {\n  return (\n    <div>\n      <GlobalStyle />\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}