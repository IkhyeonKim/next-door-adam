{"version":3,"sources":["components/section/brand-section.js","components/section/hero-section.js","components/atoms/button.js","components/molcules/modalForm.js","components/section/pricing-section.js","components/pages/main-page.presenter.js","components/pages/main-page.js","global-style.js","App.js","reportWebVitals.js","index.js"],"names":["BrandWrapper","styled","div","HiddenSection","VisibleSection","BrandSection","hiddenRef","useRef","useEffect","refElement","current","handleMouseMove","e","path","classList","contains","isVisibeSectionY","isVisibeSectionX","offsetX","offsetY","style","clipPath","window","addEventListener","removeEventListener","className","ref","HeroWrapper","SideTitle","HeroContent","HeroSection","marginTop","ButtonWrapper","props","borderRadius","ButtonPrimary","children","rest","ModalForm","visible","setVisible","title","centered","onOk","onCancel","footer","PricingWrapper","CardWrapper","PricingSection","useState","id","onClick","MainPagePresenter","MainPage","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91759e0f.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst BrandWrapper = styled.div`\n  position: relative;\n  background-color: white;\n`;\n\nconst HiddenSection = styled.div`\n  clip-path: circle(140px at 50% 50%);\n  width: 100%;\n  height: 100%;\n  padding: 16rem 1rem;\n  background-color: #f8d46c;\n  cursor: none;\n\n  p {\n    font-size: 6rem;\n    font-weight: bold;\n    text-align: center;\n    margin-bottom: 0;\n  }\n`;\n\nconst VisibleSection = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  padding: 16rem 1rem;\n\n  p {\n    font-size: 6rem;\n    font-weight: bold;\n    text-align: center;\n    margin-bottom: 0;\n  }\n`;\n\nconst BrandSection = () => {\n  const hiddenRef = useRef();\n\n  useEffect(() => {\n    const refElement = hiddenRef.current;\n    const handleMouseMove = (e) => {\n      if (\n        e.path[0].classList.contains(\"hidden-section\") ||\n        e.path[0].classList.contains(\"visible-section\") ||\n        e.path[0].classList.contains(\"visible-content\")\n      ) {\n        if (refElement) {\n          const isVisibeSectionY = e.path[0].classList.contains(\"visible-section\") ? 170 : 0;\n          const isVisibeSectionX = e.path[0].classList.contains(\"visible-section\") ? 10 : 0;\n\n          const offsetX = e.offsetX > 0 ? e.offsetX : 0;\n          const offsetY = e.offsetY > 0 ? e.offsetY : 0;\n          refElement.style.clipPath = `circle(140px at ${offsetX + isVisibeSectionX}px ${\n            offsetY + isVisibeSectionY\n          }px)`;\n        }\n      }\n    };\n\n    window.addEventListener(\"mousemove\", handleMouseMove);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, []);\n  return (\n    <BrandWrapper className=\"brand-section\">\n      <VisibleSection className=\"visible-section\">\n        <p className=\"visible-section\">\n          번역만 하지않습니다. <br /> 여러분의 이야기를 전달합니다.\n        </p>\n      </VisibleSection>\n      <HiddenSection className=\"hidden-section\" ref={hiddenRef}>\n        <p className=\"visible-section\">\n          We don't just translate <br /> We tell a story{\" \"}\n        </p>\n      </HiddenSection>\n    </BrandWrapper>\n  );\n};\n\nexport default BrandSection;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeroWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  margin: auto;\n  padding: 5rem 0 4rem 6rem;\n\n  background-color: #f8d46c;\n\n  .content-wrapper {\n    width: 980px;\n    position: relative;\n  }\n\n  h1 {\n    color: #1965c0;\n  }\n`;\n\nconst SideTitle = styled.div`\n  font-size: 18.5rem;\n  font-family: \"TmonMonsori\";\n  position: absolute;\n  top: 162px;\n  left: -59px;\n  letter-spacing: -1px;\n  color: #4f7cb1;\n  opacity: 0.15;\n  white-space: nowrap;\n  cursor: default;\n`;\n\nconst HeroContent = styled.div`\n  font-family: \"TmonMonsori\";\n  font-size: 2rem;\n  font-weight: bold;\n  color: #1965c0;\n`;\n\n// 영문 번역/카피라이팅이 필요 할 땐?\n// 이웃집 아담에게 부탁하세요!\n// 이웃집 아담\n// 여러분의 목소리를 전달합니다.\n\n// 오른쪽에\n\nconst HeroSection = () => {\n  return (\n    <HeroWrapper className=\"section section-content\">\n      <div className=\"content-wrapper\">\n        <h1 className=\"main-title\">\n          이웃집\n          <br />\n          아담\n        </h1>\n        <HeroContent\n          style={{\n            marginTop: \"1rem\",\n          }}\n        >\n          영문 번역/카피라이팅이 필요 할 땐?\n        </HeroContent>\n        <HeroContent>이웃집 아담에게 부탁하세요!</HeroContent>\n        <SideTitle>Nextdoor Adam</SideTitle>\n      </div>\n    </HeroWrapper>\n  );\n};\n\nexport default HeroSection;\n","import { Button } from \"antd\";\nimport styled from \"styled-components\";\n\nconst ButtonWrapper = styled.div`\n  .ant-btn {\n    background-color: #1965c0;\n    border: none;\n    border-radius: ${(props) => props.borderRadius || \"20px\"};\n    color: white;\n\n    &:hover {\n      background-color: #2187e5;\n    }\n  }\n`;\n\nconst ButtonPrimary = ({ children, ...rest }) => {\n  const { borderRadius } = rest;\n  return (\n    <ButtonWrapper borderRadius={borderRadius}>\n      <Button {...rest}> {children}</Button>\n    </ButtonWrapper>\n  );\n};\n\nexport default ButtonPrimary;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Modal } from \"antd\";\nimport ButtonPrimary from \"../atoms/button\";\n\nconst Background = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  background-color: rgba(0, 0, 0, 0.4);\n\n  z-index: 10;\n`;\n\nconst ModalForm = ({ visible, setVisible }) => {\n  return (\n    <Modal\n      title=\"견적 문의하기\"\n      centered\n      visible={visible}\n      onOk={() => setVisible(false)}\n      onCancel={() => setVisible(false)}\n      footer={[<ButtonPrimary borderRadius={\"4px\"}>보내기</ButtonPrimary>]}\n    >\n      <p>회신 받을 이메일 주소</p>\n      <p>용도</p>\n      <p>대략적인 내용</p>\n    </Modal>\n  );\n};\n\n// const openPopupForm = () => {\n//   const wrapper = document.body.appendChild(document.createElement(\"div\"));\n//   const rootElement = document.querySelector(\"#my-price\");\n\n//   rootElement.appendChild(document.createElement(\"div\"));\n//   console.log(\"openPopupForm\", { rootElement });\n//   return new Promise((resolve, reject) => {\n//     try {\n//       ReactDOM.render(<ModalForm />, rootElement);\n//     } catch (error) {\n//       reject(\"Failed to mount PopupForm component\");\n//     }\n//   }).then((result) => {\n//     ReactDOM.unmountComponentAtNode(rootElement);\n//     rootElement.remove();\n\n//     return result;\n//   });\n// };\n\nexport default ModalForm;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport ButtonPrimary from \"../atoms/button\";\nimport ModalForm from \"../molcules/modalForm\";\n\nconst PricingWrapper = styled.div`\n  width: 100%;\n  max-width: 980px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 2rem;\n  grid-template-rows: auto 30rem;\n\n  padding: 4rem 2rem;\n  margin-top: 2rem;\n  margin-left: auto;\n  margin-right: auto;\n\n  h2 {\n    grid-column: 1 / -1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n    font-size: 4rem;\n    margin-bottom: 0;\n  }\n`;\n\nconst CardWrapper = styled.div`\n  perspective: 90rem;\n  position: relative;\n\n  h3 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n  }\n\n  p {\n    font-size: 1.4rem;\n    line-height: 2.2rem;\n    margin-bottom: 0.8rem;\n  }\n\n  p.price {\n    margin-bottom: 2rem;\n  }\n\n  .card-side {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transition: all 1s;\n    backface-visibility: hidden;\n\n    &--front {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      /* border: solid 2px #1965c0; */\n      /* background-color: #90caf9; */\n    }\n\n    &--back {\n      /* background-color: #2495f3; */\n      transform: rotateY(180deg);\n\n      &-standard {\n        /* background: linear-gradient(to right bottom, #1965c0, #bbdefb); */\n        /* background-color: #f8d46c; */\n        border: solid 2px #f8d46c;\n      }\n    }\n  }\n\n  /* &:hover .card-side--front {\n    transform: rotateY(180deg);\n  }\n\n  &:hover .card-side--back {\n    transform: rotateY(0);\n  } */\n`;\n\nconst PricingSection = () => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <PricingWrapper id=\"my-price\" className=\"section section-content\">\n      <h2>아담의 번역 솔루션</h2>\n      <CardWrapper>\n        <div className=\"card-side card-side--front\">\n          <h3>아담의 스탠다드 솔루션</h3>\n          <p>300단어</p>\n          <p>원어민 검수</p>\n          <p>이메일, 유튜브 자막</p>\n          <p className=\"price\">₩5,000</p>\n          <ButtonPrimary onClick={() => setVisible(true)}>견적 문의하기</ButtonPrimary>\n        </div>\n        <div className=\"card-side card-side--back card-side--back-standard\">CARD1 Back</div>\n      </CardWrapper>\n\n      <CardWrapper>\n        <div className=\"card-side card-side--front\">\n          <h3>아담의 디럭스 솔루션</h3>\n          <p>300단어</p>\n          <p>원어민 검수</p>\n          <p>제품설명, 영문 이력서</p>\n          <p className=\"price\">₩6,000</p>\n          <ButtonPrimary>견적 문의하기</ButtonPrimary>\n        </div>\n        <div className=\"card-side card-side--back\">CARD2 Back</div>\n      </CardWrapper>\n\n      <CardWrapper>\n        <div className=\"card-side card-side--front\">\n          <h3>아담의 스위트 솔루션</h3>\n          <p>300단어</p>\n          <p>원어민 검수</p>\n          <p>논문 및 특수 필드</p>\n          <p className=\"price\">₩10,000</p>\n          <ButtonPrimary>견적 문의하기</ButtonPrimary>\n        </div>\n        <div className=\"card-side card-side--back\">CARD3 Back</div>\n      </CardWrapper>\n\n      <ModalForm visible={visible} setVisible={setVisible} />\n    </PricingWrapper>\n  );\n};\n\nexport default PricingSection;\n","import React from \"react\";\nimport BrandSection from \"../section/brand-section\";\nimport HeroSection from \"../section/hero-section\";\nimport PricingSection from \"../section/pricing-section\";\n\nconst MainPagePresenter = () => {\n  return (\n    <div id=\"root-wrapper\">\n      <HeroSection />\n      <BrandSection />\n      <PricingSection />\n    </div>\n  );\n};\n\nexport default MainPagePresenter;\n","import React from \"react\";\nimport MainPagePresenter from \"./main-page.presenter\";\n\nconst MainPage = () => {\n  return <MainPagePresenter />;\n};\n\nexport default MainPage;\n","import { createGlobalStyle } from \"styled-components\";\n\nimport \"./assets/css/font.css\";\nimport \"antd/dist/antd.css\";\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        box-sizing: border-box;\n\n        margin: 0;\n        padding: 0;\n    }\n\n    html {\n        font-size: 62.5%;\n    }\n\n    html, body, #root {\n        font-family: 'Roboto-ragular', \"Noto Sans KR\", sans-serif;\n        width: 100%;\n        height: 100%;\n\n        color: #111111;\n        background-color: #f2f2f2;\n    }\n\n    h2, h3, h4, h5 {\n        color: #1d1d1f;\n        margin: 0;\n    }\n\n      /* Scroll */\n    ::-webkit-scrollbar {\n        width: 8px;\n        height: 8px;\n    }\n    ::-webkit-scrollbar-track {\n        background: rgba(204, 204, 204, 0.4);\n    }\n    ::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.2);\n        opacity: 0.7;\n    }\n    ::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.2);\n    }\n\n    .section {\n        overflow: hidden;\n    }\n\n    .section-content {\n    }\n\n    .main-title {\n        font-family: \"TmonMonsori\";\n        font-size: 12.2rem;\n        line-height: 11.8rem;\n    }\n\n    .mt-10 {\n        margin-top: 1rem;\n    }\n\n    .mb-10 {\n        margin-bottom: 1rem;\n    }\n`;\n\nexport default GlobalStyle;\n","import MainPage from \"./components/pages/main-page\";\nimport GlobalStyle from \"./global-style\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <MainPage />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}